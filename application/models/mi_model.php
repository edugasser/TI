<?phpclass mi_model extends CI_Model { public function __construct()      {           parent::__construct();            $this->load->database();     }      function existe_dato($tabla,$where,$dato) {	if ($dato !=null){		$this->db->where($where, $dato);		$this->db->from($tabla);		$num = $this->db->count_all_results();		if ($num >= 1) {  //existe		    return true;		} else {		    return false;		}	}else{		return false;	}    }	function add($table,$data){				$this->db->insert($table, $data);		return $this->db->insert_id();	}	function update($table,$id_where,$where,$data){ 		$this->db->where($id_where, $where);		$this->db->update($table, $data);     }	function update_two_where($table,$id_where,$where,$id_where2, $where2,$data){ 		$this->db->where($id_where, $where);		$this->db->where($id_where2, $where2);		$this->db->update($table, $data);     }	function delete_two_where($table,$id_where1,$where1,$id_where2,$where2) { //Borramos todos los informes emitidos por la celula        $this->db->where($id_where1, $where1);        $this->db->where($id_where2, $where2);        $this->db->delete($table);    } 	function devolver_dato($table,$id,$que,$dato,$select=null) { 		 	     		$query = $this->db->where($id, $que); 		if ($select !=null){			$query = $this->db->select($select,FALSE);		}		$query = $this->db->from($table);		$query = $this->db->get();				if ($query->num_rows() > 0) {			$result = $query->row();			return $result->$dato;		}	}	    function get_field($table){		$result = $this->db->list_fields($table);		foreach($result as $field){			$data[] = $field;				}		return $data;	}	function delete($table,$id_where, $where) {         $this->db->where($id_where, $where);        $this->db->delete($table);    }	function get($table,$id_where=null,$data_where=null,$order_name=null,$order=null) { 			if($id_where!=null)$this->db->where($id_where, $data_where);				if($order_name!=null)$this->db->order_by($order_name, $order);				$query = $this->db->get($table);		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}    function get_sql($sql) { 			    $query = $this->db->query($sql);	    if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function buscador($searchq,$id=null) {		$sql = "SELECT IF(persona.foto<>1,'0',persona.id_persona) as foto,id_persona,concat_ws(' ',nombre_persona,apellido_persona) AS nombrecompleto FROM persona HAVING nombrecompleto LIKE '%$searchq%' LIMIT 9";		$query = $this->db->query($sql);		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function buscador_dentro($searchq,$id) {	         $sql = "SELECT *,concat_ws(' ',nombre_persona,apellido_persona) AS nombrecompleto FROM grupo_persona JOIN persona ON persona.id_persona = grupo_persona.id_persona WHERE id_grupo = '$id' HAVING nombrecompleto LIKE '%$searchq%' LIMIT 15";		$query = $this->db->query($sql);		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}    //FAMILIA    function esPadre($id_persona){		$this->db->where("matrimonio",'1');        $this->db->where("id_persona",$id_persona);		$this->db->from('familia_persona');		     	$num =  $this->db->count_all_results();		if ($num >= 1) { 	//existe				return true; 		}else{ 			return $num;		} 		}			function getFamilia($id_familia){				if ($id_familia != ''){				$this->db->order_by("persona.nombre","ASC");		$query = $this->db->select("persona.foto,persona.id_persona,familia_persona.matrimonio");        $query = $this->db->select("CONCAT(nombre,' ',apellido) AS nombrecompleto", FALSE);		$query = $this->db->where("id_familia",$id_familia);        $query = $this->db->join("familia_persona", "familia_persona.id_persona = persona.id_persona");        $query = $this->db->get("persona");        if ($query->num_rows() > 0) {                return $query->result();                $query = free_result();        }else{        }		}	}	function getFamiliaPersona($id_persona,$matrimonio){	    $query = $this->db->select("id_familia");        $query = $this->db->where("id_persona",$id_persona);		$query = $this->db->where("matrimonio",$matrimonio);		$query = $this->db->get("familia_persona");		if ($query->num_rows() > 0) {			$result = $query->row();			return $result->id_familia;			}else{		}	}	function getHermanosPersona($id_familia,$id_persona){		$query = $this->db->order_by("persona.nombre_persona","ASC");		$query = $this->db->select("persona.id_persona");        $query = $this->db->select("profesion,poblacion,fecha_nac,IF(persona.foto<>1,'0',persona.id_persona) as foto",FALSE);               $query = $this->db->select("CONCAT(nombre_persona,' ',apellido_persona) AS nombre_completo", FALSE);		$query = $this->db->where("id_familia",$id_familia);		$query = $this->db->where("matrimonio",'0');		$query = $this->db->where("familia_persona.id_persona !=",$id_persona);        $query = $this->db->join("familia_persona", "familia_persona.id_persona = persona.id_persona");        $query = $this->db->get("persona");				if ($query->num_rows() > 0) {                return $query->result();                $query = free_result();        }else{        }	}	function savePersonaFamilia($id_familia,$id_persona){    	$data = array(             "id_persona" => $id_persona,            "id_familia" => $id_familia            );        $this->db->insert("familia_persona",$data);        return $this->db->insert_id();	}	function getHijosPersona($id_familia){		$query = $this->db->order_by("persona.nombre_persona","ASC");		$query = $this->db->select("persona.id_persona");        $query = $this->db->select("profesion,poblacion,fecha_nac,IF(persona.foto<>1,'0',persona.id_persona) as foto",FALSE);               $query = $this->db->select("CONCAT(nombre_persona,' ',apellido_persona) AS nombre_completo", FALSE);		$query = $this->db->where("familia_persona.id_familia ",$id_familia);		$query = $this->db->where("familia_persona.matrimonio ",'0');        $query = $this->db->join("familia_persona", "familia_persona.id_persona = persona.id_persona");        $query = $this->db->get("persona");				if ($query->num_rows() > 0) {                return $query->result();                $query = free_result();        }else{        }	}	function getParejaPersona($id_familia,$id_persona){		$query = $this->db->order_by("persona.nombre_persona","ASC");		$query = $this->db->select("persona.id_persona");        $query = $this->db->select("poblacion,fecha_nac,IF(persona.foto<>1,'0',persona.id_persona) as foto",FALSE);               $query = $this->db->select("profesion,CONCAT(nombre_persona,' ',apellido_persona) AS nombre_completo", FALSE);		$query = $this->db->where("familia_persona.id_familia =",$id_familia);		$query = $this->db->where("familia_persona.id_persona !=",$id_persona);		$query = $this->db->where("familia_persona.matrimonio =",'1');        $query = $this->db->join("familia_persona", "familia_persona.id_persona = persona.id_persona");        $query = $this->db->get("persona");				if ($query->num_rows() > 0) {                return $query->result();                $query = free_result();        }else{		}	}	function getMatrimonioFamilia($id_familia){		$this->db->order_by("persona.nombre_persona","ASC");		$query = $this->db->select("persona.id_persona");		$query = $this->db->select("profesion,poblacion,fecha_nac,IF(persona.foto<>1,'0',persona.id_persona) as foto",FALSE);        $query = $this->db->select("CONCAT(nombre_persona,' ',apellido_persona) AS nombre_completo", FALSE);		$query = $this->db->where("id_familia",$id_familia);		$query = $this->db->where("matrimonio",'1');        $query = $this->db->join("familia_persona", "familia_persona.id_persona = persona.id_persona");        $query = $this->db->get("persona");				if ($query->num_rows() > 0) {                return $query->result();                $query = free_result();        }else{        }			}	function getCountPareja($id_familia){		$this->db->where("matrimonio",1);	    $this->db->where("id_familia",$id_familia);		$this->db->from('familia_persona');		     	return $this->db->count_all_results();		 		} 	////////////////////////////////////////////	function reservas_caducadas(){		$hace_dos_dias =  date('Y-m-d', strtotime('2 days ago')); 				$sql = "SELECT *, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva, DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro,			DATE_FORMAT(fi,'%d-%m-%Y') AS fecha_inicio,			DATE_FORMAT(ff,'%d-%m-%Y') AS fecha_fin			FROM reserva 			JOIN propiedad ON propiedad.id_propiedad = reserva.id_propiedad 			WHERE  fecha_registro = '$hace_dos_dias' 			 AND visible = '1'";			 	    $query = $this->db->query($sql);	    if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function cancelar($id_reserva){		 $data = array(               'visible' => '0'             );		$this->db->where('id_reserva', $id_reserva);		$this->db->update('reserva', $data);     }	function setControl($estado){		 $data = array(               'estado' => $estado             );		$this->db->where('id_control', '1');		$this->db->update('control', $data);     }	function aceptar($id_reserva){		 $data = array(               'visible' => '1'             );		$this->db->where('id_reserva', $id_reserva);		$this->db->update('reserva', $data);     }	function accion_confirmar($id_reserva){		 $data = array(               'confirmado' => '1'             );		$this->db->where('id_reserva', $id_reserva);		$this->db->update('reserva', $data);     } 	function accion_noconfirmar($id_reserva){		$data = array(               'confirmado' => '0'             );				$this->db->where('id_reserva', $id_reserva);		$this->db->update('reserva', $data);     } 	function getReservas($id_propiedad=null) { 			    if ($id_propiedad != null){		$query = $this->db->where("reserva.id_propiedad", $id_propiedad);		}		$this->db->select('*, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva');		$query = $this->db->select("DATE_FORMAT(fi,'%d-%m-%Y') AS fi", FALSE);		$query = $this->db->select("DATE_FORMAT(ff,'%d-%m-%Y') AS ff", FALSE);		$query = $this->db->select("DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro", FALSE);		$this->db->from('reserva');		$this->db->join('propiedad', 'propiedad.id_propiedad = reserva.id_propiedad');		$query = $this->db->get();		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	  	function getReserva($id_reserva) { 				$query = $this->db->where("id_reserva", $id_reserva);		$this->db->select('*, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva');		$query = $this->db->select("DATE_FORMAT(fi,'%d-%m-%Y') AS fi", FALSE);		$query = $this->db->select("DATE_FORMAT(ff,'%d-%m-%Y') AS ff", FALSE);		$query = $this->db->select("DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro", FALSE);		$this->db->from('reserva');		$this->db->join('propiedad', 'propiedad.id_propiedad = reserva.id_propiedad');		$query = $this->db->get();		if ($query->num_rows() > 0) {			return $query->result();			$query = free_result();		}	}		function getReserva2($id_reserva) { 		 // date format mysql		$query = $this->db->where("id_reserva", $id_reserva);		$this->db->select('*, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva'); 		$query = $this->db->select("DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro", FALSE);		$this->db->from('reserva');		$this->db->join('propiedad', 'propiedad.id_propiedad = reserva.id_propiedad');		$query = $this->db->get();		if ($query->num_rows() > 0) {			return $query->result();			$query = free_result();		}	}		function getReserva_Antigua($id_propiedad,$id_reserva) { 		 	    $query = $this->db->order_by("reserva.fecha_registro", 'DESC');     		$query = $this->db->where("reserva.id_propiedad", $id_propiedad);		if ($id_reserva != null){		$query = $this->db->where("reserva.id_reserva !=", $id_reserva );		}		$this->db->select('id_reserva'); 		$this->db->from('reserva');		$query = $this->db->get();		if ($query->num_rows() > 0) {			  $result = $query->row();            return $result->id_reserva;		}	}		function getReservaSolapadas($fechai,$fechaf,$id_reserva,$id_propiedad) { 			    $sql = "SELECT *, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva, DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro,		DATE_FORMAT(fi,'%d-%m-%Y') AS fecha_inicio,		DATE_FORMAT(ff,'%d-%m-%Y') AS fecha_fin		FROM reserva 		JOIN propiedad ON propiedad.id_propiedad = reserva.id_propiedad 		WHERE (fi <= '".$fechaf."' AND fi >= '".$fechai."' OR			  ff <= '".$fechaf."' AND ff >= '".$fechai."' OR			  fi <= '".$fechaf."' AND ff >= '".$fechaf."')		AND reserva.id_reserva != ".$id_reserva." AND reserva.id_propiedad = '$id_propiedad' AND visible = '1'";	 	    $query = $this->db->query($sql);	    if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function getControl(){	         $query = $this->db->get("control");		 if ($query->num_rows() > 0) {            $result = $query->row();            return $result->estado;        }	}	function getReservaSolapadasBoolean($fechai,$fechaf,$id_reserva,$id_propiedad) { 			    $sql = "SELECT *, propiedad.nombre as nombre_propiedad, reserva.nombre as nombre_reserva, DATE_FORMAT(fecha_registro,'%d-%m-%Y') AS fecha_registro,		DATE_FORMAT(fi,'%d-%m-%Y') AS fecha_inicio,		DATE_FORMAT(ff,'%d-%m-%Y') AS fecha_fin 				FROM reserva 		JOIN propiedad ON propiedad.id_propiedad = reserva.id_propiedad 		WHERE (fi <= '".$fechaf."' AND ff >= '".$fechaf."' OR			  fi <= '".$fechai."' AND ff >= '".$fechai."' OR			  fi >= '".$fechai."' AND ff <= '".$fechaf."')		AND reserva.id_reserva != ".$id_reserva." AND reserva.id_propiedad = '$id_propiedad' AND visible = '1'";	 	    $query = $this->db->query($sql);	    if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function getDiasConfirmados($id_propiedad) { 		$this->db->distinct();					$query = $this->db->where("visible", "1");		$query = $this->db->where("confirmado", "1");		$query = $this->db->where("id_propiedad", $id_propiedad);		$query = $this->db->get("reserva");		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	} 	function getDiasNoConfirmados($id_propiedad) { 				$this->db->distinct();		$query = $this->db->where("visible", "1");		$query = $this->db->where("confirmado", "0");		$query = $this->db->where("id_propiedad", $id_propiedad);		$query = $this->db->get("reserva");		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function getPrecios($id_propiedad) { 			  $query = $this->db->where("id_propiedad", $id_propiedad);        $query = $this->db->get("precios");		if ($query->num_rows() > 0) {		    return $query->result();		    $query = free_result();		}	}	function getPrecioMes($id_propiedad,$mes) { 		   $query = $this->db->where("mes_num", $mes);		  $query = $this->db->where("id_propiedad", $id_propiedad);        $query = $this->db->get("precios");		 if ($query->num_rows() > 0) {            $result = $query->row();            return $result->precio;        }	}	function getPropiedad($id_propiedad) { 		  $query = $this->db->where("id_propiedad", $id_propiedad);        $query = $this->db->get("propiedad");		 if ($query->num_rows() > 0) {            $result = $query->row();            return $result->nombre;        }	}	function Reserva($id_reserva) { //Borramos todos los informes emitidos por la celula        $this->db->where("id_reserva", $id_reserva);        $this->db->delete("reserva");    }	function getEmailCliente($id_reserva) { 		  $query = $this->db->where("id_reserva", $id_reserva);        $query = $this->db->get("id_reserva");		 if ($query->num_rows() > 0) {            $result = $query->row();            return $result->email;        }	}	function getPropiedad_id($id_reserva){		$query = $this->db->where("id_reserva", $id_reserva);		$query = $this->db->get("reserva");		 if ($query->num_rows() > 0) {            $result = $query->row();            return $result->id_propiedad;        }	}	function addReserva($fi,$ff){		  $data = array(            "fi" =>  $fi,			"visible" => '1',			"fecha_registro" => date("Y-m-d"),			"ff" => $ff,			"personas" =>$_POST["personas"],			"ninos" =>$_POST["ninos"],			"telefono" =>$_POST["tel"],			"precio" => $_POST["precio"],			"nombre" => $_POST["nombre"],			"email" => $_POST["email"],			"mensaje" => $_POST["mensaje"],			"id_propiedad" => $_POST["id_propiedad"],			);        $this->db->insert("reserva", $data);	}	}?>